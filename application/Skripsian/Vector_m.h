//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/application/Skripsian/Vector.msg.
//

#ifndef _VECTOR_M_H_
#define _VECTOR_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
      #include "ApplicationPacket_m.h"
    
// }}

/**
 * Class generated from <tt>src/node/application/Skripsian/Vector.msg:21</tt> by nedtool.
 * <pre>
 * packet myDataPacket extends ApplicationPacket
 * {
 *     double myDataArray[];
 * }
 * </pre>
 */
class myDataPacket : public ::ApplicationPacket
{
  protected:
    double *myDataArray_var; // array ptr
    unsigned int myDataArray_arraysize;

  private:
    void copy(const myDataPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const myDataPacket&);

  public:
    myDataPacket(const char *name=NULL, int kind=0);
    myDataPacket(const myDataPacket& other);
    virtual ~myDataPacket();
    myDataPacket& operator=(const myDataPacket& other);
    virtual myDataPacket *dup() const {return new myDataPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual void setMyDataArrayArraySize(unsigned int size);
    virtual unsigned int getMyDataArrayArraySize() const;
    virtual double getMyDataArray(unsigned int k) const;
    virtual void setMyDataArray(unsigned int k, double myDataArray);
};

inline void doPacking(cCommBuffer *b, myDataPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, myDataPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _VECTOR_M_H_

